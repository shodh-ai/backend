# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  deploy:
      needs: [build]
      name: Deploy to ${{ needs.get-environment.outputs.environment-name }} Environment
      runs-on: ubuntu-22.04
      permissions:
          id-token: write
          contents: read
      steps:
      - name: Download Deployment Artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-artifact

      - name: Check Deployment Artifact
        run: |
          if [ ! -f ./deployment-$BUILD_NUMBER.zip ]; then
            echo "Error: Deployment artifact not found. Make sure it is created in the build job."
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          role-session-name: githubactionsession
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS CodeDeploy
        run: |
          aws s3 cp deployment-$BUILD_NUMBER.zip s3://${{ vars.CODE_DEPLOY_BUCKET }}/api/deployment-$BUILD_NUMBER.zip

          deploymentId=$(aws deploy create-deployment \
              --application-name ${{ vars.CODE_DEPLOY_APPLICATION }} \
              --deployment-group-name ${{ vars.CODE_DEPLOY_GROUP }} \
              --s3-location bucket=${{ vars.CODE_DEPLOY_BUCKET }},key=api/deployment-$BUILD_NUMBER.zip,bundleType=zip \
              --file-exists-behavior OVERWRITE \
              --description "Staging api-backend deployment - $BUILD_NUMBER" --region ${{ secrets.AWS_REGION }} | jq -r '.deploymentId')

          # check deployment status
          deploymentStatus=""
          while : ; do
            status=$(aws deploy get-deployment --deployment-id $deploymentId --region ${{ secrets.AWS_REGION }} | jq -r '.deploymentInfo.status')

            if [ "$status" != "Created" ] && [ "$status" != "InProgress" ] && [ "$status" != "Pending" ]; then
              if [ "$status" == "Succeeded" ]; then
                echo "Deployment Successful"
                export deploymentStatus=0
                break
              else
                export deploymentStatus=1
                echo "Deployment failed. Check the AWS Codedeploy for more information"
                break
              fi
            fi

            sleep 10
          done
          exit $deploymentStatus
 
